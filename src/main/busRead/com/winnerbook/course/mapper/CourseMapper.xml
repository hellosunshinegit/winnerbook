<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CourseMapper" >
  <resultMap id="BaseResultMap" type="com.winnerbook.course.dto.Course" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_type_name" property="courseTypeName" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="wb_title" property="wbTitle" jdbcType="VARCHAR" />
    <result column="wb_img" property="wbImg" jdbcType="VARCHAR" />
    <result column="course_desc" property="courseDesc" jdbcType="VARCHAR" />
    <result column="main_guest" property="mainGuest" jdbcType="VARCHAR" />
    <result column="main_guest_post" property="mainGuestPost" jdbcType="VARCHAR" />
    <result column="main_guest_introduce" jdbcType="VARCHAR" property="mainGuestIntroduce" />
    <result column="main_guest_img" jdbcType="VARCHAR" property="mainGuestImg" />
    <result column="main_guest_baidu_know" jdbcType="VARCHAR" property="mainGuestBaiduKnow" />
    <result column="dialog_guest" property="dialogGuest" jdbcType="VARCHAR" />
    <result column="dialog_guest_post" property="dialogGuestPost" jdbcType="VARCHAR" />
    <result column="presenter" property="presenter" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="book_list_id" property="bookListId" jdbcType="INTEGER" />
    <result column="recommend_book" jdbcType="VARCHAR" property="recommendBook" />
    <result column="recommend_book_img" jdbcType="VARCHAR" property="recommendBookImg" />
    <result column="recommend_book_introduce" jdbcType="VARCHAR" property="recommendBookIntroduce" />
    <result column="recommend_reason" jdbcType="VARCHAR" property="recommendReason" />
    <result column="recommend_reason_img" jdbcType="VARCHAR" property="recommendReasonImg" />
    <result column="recording_date" property="recordingDate" jdbcType="VARCHAR" />
    <result column="main_video_url" property="mainVideoUrl" jdbcType="VARCHAR" />
    <result column="main_video_filename" jdbcType="VARCHAR" property="mainVideoFilename" />
    <result column="main_video_link" jdbcType="VARCHAR" property="mainVideoLink" />
    <result column="main_video_time" jdbcType="VARCHAR" property="mainVideoTime" />
    <result column="main_audio_url" property="mainAudioUrl" jdbcType="VARCHAR" />
    <result column="main_audio_filename" jdbcType="VARCHAR" property="mainAudioFilename" />
    <result column="main_audio_link" jdbcType="VARCHAR" property="mainAudioLink" />
    <result column="course_type" property="courseType" jdbcType="VARCHAR" />
    <result column="course_status" property="courseStatus" jdbcType="VARCHAR" />
    <result column="course_click_num" property="courseClickNum" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="course_sort" property="courseSort" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List">
    course_id, course_type_name, title, wb_title,wb_img,course_desc, main_guest, main_guest_post, main_guest_introduce, 
    main_guest_img, main_guest_baidu_know,dialog_guest, dialog_guest_post, presenter, content,book_list_id,recommend_book, recommend_book_img, 
    recommend_book_introduce, recommend_reason, recommend_reason_img, recording_date, 
    main_video_url, main_video_filename,main_video_link, main_video_time ,main_audio_url, main_audio_filename,main_audio_link, course_type, 
    course_status, create_date, create_user_id, create_user_name,course_sort,(select count(*) from wb_send_info where main_type='course' and main_id=course_id) wbCount
  </sql>
  
  <select id="listByPage" parameterType="hashmap" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" />
  	from bus_course where 1=1 
  	<if test="sessionUser!=null and sessionUser.isAdmin != '1'.toString()"><!-- 超级管理员可以看所有，企业管理员可以看他自己的和基础数据(超级管理员创建的是基础数据) -->
  		and (FIND_IN_SET(create_user_id,getChildrenUser(${sessionUser.userId}))
  		or (FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where FIND_IN_SET(course_type_id,(select GROUP_CONCAT(course_type_id) from uc_user_bus_course_type where user_id=#{sessionUser.userId})))) and course_status=2))
  	</if>
  	
	<if test="title != null and title  != '' "> and (title like '%${title}%' or main_guest like '%${title}%' or recommend_book like '%${title}%') </if>
	<if test="courseTypeId != null and courseTypeId  != '' "> and FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId}))</if>
	<if test="courseStatus != null and courseStatus  != '' "> and course_status=#{courseStatus} </if>
	
	order by course_sort desc,course_id desc
	<if test="limit != null and limit  != '' ">
		limit ${start},${limit}
	</if>
  </select>
  
   <select id="selectCount" parameterType="hashmap" resultType="java.lang.Integer">
  	select count(*) from bus_course where 1=1 
  	<if test="sessionUser!=null and sessionUser.isAdmin != '1'.toString()"><!-- 超级管理员可以看所有，企业管理员可以看他自己的和基础数据(超级管理员创建的是基础数据) -->
  		and (FIND_IN_SET(create_user_id,getChildrenUser(${sessionUser.userId}))
  		or (FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where FIND_IN_SET(course_type_id,(select GROUP_CONCAT(course_type_id) from uc_user_bus_course_type where user_id=#{sessionUser.userId})))) and course_status=2))
  	</if>
	<if test="title != null and title  != '' "> and (title like '%${title}%' or main_guest like '%${title}%' or recommend_book like '%${title}%') </if>
	<if test="courseTypeId != null and courseTypeId  != '' "> and FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId}))</if>
	<if test="courseStatus != null and courseStatus  != '' "> and course_status=#{courseStatus} </if>
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />,
    (select GROUP_CONCAT(course_type_id) from bus_course_type_id where course_id=#{courseId}) courseTypeIds
    from bus_course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from bus_course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.winnerbook.course.dto.Course" useGeneratedKeys="true" keyProperty="courseId">
    insert into bus_course (course_type_name, title, wb_title,wb_img,
      course_desc, main_guest, main_guest_post, 
      main_guest_introduce, main_guest_img, main_guest_baidu_know,dialog_guest, 
      dialog_guest_post, presenter, book_list_id,recommend_book, 
      recommend_book_img, recommend_book_introduce, 
      recommend_reason, recommend_reason_img, recording_date, 
      main_video_url, main_video_filename, main_video_link ,main_video_time,main_audio_url, 
      main_audio_filename, main_audio_link,course_type, course_status, 
      create_date, create_user_id, create_user_name, 
      content,course_sort)
    values (#{courseTypeName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},  #{wbTitle,jdbcType=VARCHAR}, #{wbImg,jdbcType=VARCHAR}, 
      #{courseDesc,jdbcType=VARCHAR}, #{mainGuest,jdbcType=VARCHAR}, #{mainGuestPost,jdbcType=VARCHAR}, 
      #{mainGuestIntroduce,jdbcType=VARCHAR}, #{mainGuestImg,jdbcType=VARCHAR},#{mainGuestBaiduKnow,jdbcType=VARCHAR}, #{dialogGuest,jdbcType=VARCHAR}, 
      #{dialogGuestPost,jdbcType=VARCHAR}, #{presenter,jdbcType=VARCHAR}, #{bookListId,jdbcType=INTEGER},#{recommendBook,jdbcType=VARCHAR}, 
      #{recommendBookImg,jdbcType=VARCHAR}, #{recommendBookIntroduce,jdbcType=VARCHAR}, 
      #{recommendReason,jdbcType=VARCHAR}, #{recommendReasonImg,jdbcType=VARCHAR}, #{recordingDate,jdbcType=VARCHAR}, 
      #{mainVideoUrl,jdbcType=VARCHAR}, #{mainVideoFilename,jdbcType=VARCHAR}, #{mainVideoLink,jdbcType=VARCHAR},#{mainVideoTime,jdbcType=VARCHAR},
      #{mainAudioUrl,jdbcType=VARCHAR}, 
      #{mainAudioFilename,jdbcType=VARCHAR}, #{mainAudioLink,jdbcType=VARCHAR}, #{courseType,jdbcType=VARCHAR}, #{courseStatus,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR},#{courseSort,jdbcType=INTEGER})
  </insert>
  
  <update id="update" parameterType="com.winnerbook.course.dto.Course">
    update bus_course
    set course_type_name = #{courseTypeName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      wb_title = #{wbTitle,jdbcType=VARCHAR},
      wb_img = #{wbImg,jdbcType=VARCHAR},
      course_desc = #{courseDesc,jdbcType=VARCHAR},
      main_guest = #{mainGuest,jdbcType=VARCHAR},
      main_guest_post = #{mainGuestPost,jdbcType=VARCHAR},
      main_guest_introduce = #{mainGuestIntroduce,jdbcType=VARCHAR},
      main_guest_img = #{mainGuestImg,jdbcType=VARCHAR},
      main_guest_baidu_know = #{mainGuestBaiduKnow,jdbcType=VARCHAR},
      dialog_guest = #{dialogGuest,jdbcType=VARCHAR},
      dialog_guest_post = #{dialogGuestPost,jdbcType=VARCHAR},
      presenter = #{presenter,jdbcType=VARCHAR},
      book_list_id = #{bookListId,jdbcType=INTEGER},
      recommend_book = #{recommendBook,jdbcType=VARCHAR},
      recommend_book_img = #{recommendBookImg,jdbcType=VARCHAR},
      recommend_book_introduce = #{recommendBookIntroduce,jdbcType=VARCHAR},
      recommend_reason = #{recommendReason,jdbcType=VARCHAR},
      recommend_reason_img = #{recommendReasonImg,jdbcType=VARCHAR},
      recording_date = #{recordingDate,jdbcType=VARCHAR},
      main_video_url = #{mainVideoUrl,jdbcType=VARCHAR},
      main_video_filename = #{mainVideoFilename,jdbcType=VARCHAR},
      main_video_link = #{mainVideoLink,jdbcType=VARCHAR},
      main_video_time = #{mainVideoTime,jdbcType=VARCHAR},
      main_audio_url = #{mainAudioUrl,jdbcType=VARCHAR},
      main_audio_filename = #{mainAudioFilename,jdbcType=VARCHAR},
      main_audio_link = #{mainAudioLink,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      course_status = #{courseStatus,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      course_sort = #{courseSort,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  
  <select id="getCourseRelease" parameterType="hashmap" resultType="hashmap">
  	select id courseReleaseId,course_id courseId,user_id userId,status courseReleaseStatus from bus_course_release where user_id=#{sessonUserId}
  </select>
 
  <!-- 查询课程发布是否有值 -->
  <select id="updateCourseRelease" parameterType="hashmap">
  	update bus_course_release set status=#{status} where id=#{courseReleaseId}
  </select>
 
  <insert id="insertCourseRelease" parameterType="hashmap">
  	insert into bus_course_release(course_id,user_id,status,create_date,create_user_id,create_user_name) values
  	(#{courseId},#{userId},#{status},#{createDate},#{createUserId},#{createUserName})
  </insert>
  
  <!-- 批量发布 -->
  <insert id="insertBathCourseRelease" parameterType="list">
  	insert into bus_course_release(course_id,user_id,status,create_date,create_user_id,create_user_name) values
  	<foreach collection="list" item="item" separator=",">
	  	(#{item.courseId},#{item.userId},#{item.status},#{item.createDate},#{item.createUserId},#{item.createUserName})
  	</foreach>
  </insert>
  
  <!-- 查询书籍是否有对应的课程，如果有，则存储 -->
  <select id="getCourseByBookListId" parameterType="hashmap" resultType="hashmap">
  	select course_id courseId,title from bus_course where book_list_id=#{bookListId}
  </select>
  
  <!-- 查询admin添加的课程，并且是已经发布的数据，而且是有小视频的数据，用于创建企业的时候，默认推荐一条 -->
  <select id="getCourseAdminCreate" resultType="hashmap">
  	select DISTINCT courseId from (
	select c.course_id courseId,f.file_id fileId from bus_course c left join bus_course_file f on c.course_id=f.course_id where c.create_user_id=1 and c.course_status=2 and FIND_IN_SET(c.course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where FIND_IN_SET(course_type_id,(select type_id from bus_course_type where create_user_id=1 and type_status=1 and type_is_free=1 order by type_id asc limit 1)))) 
	and f.file_type=1 order by c.course_id desc) a limit 3
  </select>
  
  <!-- 删除中间表表 -->
  <delete id="deleteCourseTypeId" parameterType="java.lang.Integer">
  	delete from bus_course_type_id where course_id=#{courseId}
  </delete>
  
  <!-- 插入课程类型与课程之间的关系 -->
  <insert id="insertCourseTypeId" parameterType="list">
  	insert into bus_course_type_id(course_id,course_type_id,create_date) values
  	<foreach collection="list" item="item" separator=",">
  		(#{item.courseId},#{item.courseTypeId},#{item.createDate})
  	</foreach>
  </insert>
  
  <!-- 查询需要全部推送的课程 -->
  <select id="getCourseReleases" parameterType="hashmap" resultType="hashmap">
  	select course_id from bus_course where FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where FIND_IN_SET(course_type_id,(select GROUP_CONCAT(course_type_id) from uc_user_bus_course_type where user_id=#{sessionUserId})))) and course_status=2
  </select>
  
  <!-- 取消所有发布，针对企业已经买了课程，但是类型调整了，导致的课程不对应的问题 -->
  <delete id="deleteCourseReleases" parameterType="hashmap">
  	delete from bus_course_release where user_id=#{sessionUserId}
  </delete>
  
  <!-- web端查询课程 -->
  <select id="getCourses" parameterType="hashmap" resultType="hashmap">
  	select c.course_id courseId, c.title, c.wb_title wbTitle,c.course_desc  courseDesc, c.main_guest mainGuest, c.main_guest_post mainGuestPost, bl.book_img bookImg,c.course_click_num courseClickNum 
  	from bus_course  c left join bus_book_list bl on c.book_list_id=bl.book_id 
  	where c.course_status=2
  	<if test="courseTypeId!=null and courseTypeId!=''"> and FIND_IN_SET(c.course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId})) </if>
    <if test="busId != null and busId  != '' "> and (c.create_user_id = #{busId} or c.course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1)) </if>
    order by c.course_sort desc,c.course_id desc
    <if test="start != null "> limit ${start},${limit} </if>
  </select>
  <select id="getCoursesCount" parameterType="hashmap" resultType="java.lang.Integer">
  	select count(*)
  	from bus_course
  	where course_status=2
  	<if test="courseTypeId!=null and courseTypeId!=''"> and FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId})) </if>
    <if test="busId != null and busId  != '' "> and (create_user_id = #{busId} or course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1)) </if>
  </select>
  
  <!-- 查询admin所有的课程，已发布的 -->
  <select id="getAdminCourses" parameterType="hashmap" resultType="hashmap">
  	select c.course_id courseId, c.title, c.wb_title wbTitle,c.course_desc  courseDesc, c.course_type courseType,c.main_guest mainGuest, c.main_guest_post mainGuestPost, IFNULL(bl.book_img,c.main_guest_img) bookImg,c.course_click_num courseClickNum 
  	from bus_course  c left join bus_book_list bl on c.book_list_id=bl.book_id 
  	where c.course_status=2 and c.create_user_id = 1
  	<if test="courseTypeId!=null and courseTypeId!=''"> and FIND_IN_SET(c.course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId})) </if>
    order by c.course_sort desc,c.course_id desc
    <if test="start != null "> limit ${start},${limit} </if>
  </select>
  <select id="getAdminCoursesCount" parameterType="hashmap" resultType="java.lang.Integer">
  	select count(*) from bus_course where course_status=2 and create_user_id = 1
  	<if test="courseTypeId!=null and courseTypeId!=''"> and FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId})) </if>
  </select>
  
  <!-- 领读大咖修改，一个页面只显示一个相同的大咖名称 20190726  -->
  <select id="getMainGuests"  parameterType="hashmap" resultType="hashmap">
  	select course_id courseId,main_guest mainGuest,count(main_guest) mainGuestCount,main_guest_post mainGuestPost,main_guest_introduce mainGuestIntroduce,main_guest_img mainGuesImg,main_guest_baidu_know mainGuestBaiduKnow,recommend_book recommendBook,course_type courseType  
  	from bus_course 
  	where course_status=2
  	<if test="busId != null and busId  != '' "> and (create_user_id = #{busId} or course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1)) </if>
  	GROUP BY main_guest
  	order by course_sort desc,course_id desc
    <if test="start != null "> limit ${start},${limit} </if>
  </select>
  
  <select id="getMainGuestsCount" parameterType="hashmap" resultType="java.lang.Integer">
  select count(total) from (
  	select count(*) total
  	from bus_course
  	where course_status=2
    <if test="busId != null and busId  != '' "> and (create_user_id = #{busId} or course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1)) </if>
    GROUP BY main_guest) a
  </select>
  
  <!-- 查询领读大咖  根据大咖名称去查询他下的课程  包括大咖一起读和商学院-->
  <select id="getMainGuestsByName" parameterType="hashmap" resultType="hashmap">
  	select course_id courseId,main_guest mainGuest,main_guest_post mainGuestPost,main_guest_introduce mainGuestIntroduce,main_guest_img mainGuesImg,main_guest_baidu_know mainGuestBaiduKnow,recommend_book recommendBook,course_type courseType  
  	from bus_course 
  	where course_status=2
  	<if test="busId != null and busId  != '' "> and (create_user_id = #{busId} or course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1)) </if>
  	and main_guest=#{mainGuest}
  	order by course_sort desc,course_id desc
    <if test="start != null "> limit ${start},${limit} </if>
  </select>
   <select id="getMainGuestsByNameCount" parameterType="hashmap" resultType="java.lang.Integer">
  	select count(*)
  	from bus_course
  	where course_status=2 and main_guest=#{mainGuest}
    <if test="busId != null and busId  != '' "> and (create_user_id = #{busId} or course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1)) </if>
  </select>
  
  <!-- 视频清单 课程对应的小视频-->
  <select id="getVideos" parameterType="hashmap" resultType="hashmap">
  	select file_id fileId,cf.course_id courseId,c.title,file_title fileTitle,file_url fileUrl,b.book_img bookImg from bus_course_file cf 
	left join bus_course c on cf.course_id=c.course_id
	left join bus_book_list b on c.book_list_id=b.book_id
	where cf.file_type=1 and c.course_status=2 
	<if test="busId != null and busId  != '' "> and cf.create_user_id = #{busId}  or (c.course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1) and cf.file_type=1) </if>
  	order by c.course_sort desc,c.course_id desc
  	<if test="start != null "> limit ${start},${limit} </if>
  </select>
  <select id="getVideosCount" parameterType="hashmap" resultType="java.lang.Integer">
  	select count(*) from bus_course_file cf 
	left join bus_course c on cf.course_id=c.course_id
	where cf.file_type=1 and c.course_status=2 
	<if test="busId != null and busId  != '' "> and cf.create_user_id = #{busId}  or (c.course_id in (select course_id from bus_course_release where user_id=#{busId} and status=1) and cf.file_type=1) </if>
 </select>
 
 <!-- 查询课程详情 -->
 <select id="getCourseDetail" parameterType="hashmap" resultType="hashmap">
 	select course_id courseId, title, course_desc  courseDesc, main_guest mainGuest, main_guest_post mainGuestPost,main_guest_introduce mainGuestIntroduce,presenter,
 	l.book_content_des recommendBookIntroduce,recommend_reason recommendReason,recording_date recordingDate,book_list_id bookListId,
 	recommend_book recommendBook,main_video_url mainVideoUrl,main_video_link mainVideoLink,main_audio_url mainAudioUrl,content,main_guest_baidu_know baiduKnowLink,l.book_img bookImg,
 	c.dialog_guest dialogGuest,(select GROUP_CONCAT(course_type_id) from bus_course_type_id where course_id=#{courseId}) courseTypeIds,course_type courseType,main_audio_link mainAudioLink
  	from bus_course c left join bus_book_list l on c.book_list_id=l.book_id where course_id=#{courseId}
 </select>
 <!-- 查询附件信息 file_type=1 and   -->
 <select id="getCourseFile" parameterType="hashmap" resultType="hashmap">
 	select file_id fileId,course_id courseId,file_title fileTitle,file_url fileUrl,file_type fileType from bus_course_file where course_id=#{courseId} order by file_sort asc
 </select>
 
 <!-- 更新点击次数 -->
 <update id="updateClickNum" parameterType="hashmap">
 	update bus_course set course_click_num = course_click_num+1,update_date=NOW() where course_id=#{courseId}
 </update>
 
 <!-- 查询免费课程 -->
 <select id="getFreeCourses" parameterType="hashmap" resultType="hashmap">
 	select c.course_id courseId, c.title, c.wb_title wbTitle,c.course_desc courseDesc, c.main_guest mainGuest, c.main_guest_post mainGuestPost, bl.book_img bookImg,c.course_click_num courseClickNum from bus_course c left join bus_book_list bl on c.book_list_id=bl.book_id 
	where c.course_status=2 and c.create_user_id=1 and
	FIND_IN_SET(c.course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId})) 
    order by c.course_sort desc,c.course_id desc
    <if test="start != null "> limit ${start},${limit} </if>
  </select>
  <select id="getFreeCoursesCount" parameterType="hashmap" resultType="java.lang.Integer">
  	select count(*)
  	from bus_course
  	where course_status=2 and create_user_id=1 and
	FIND_IN_SET(course_id,(select GROUP_CONCAT(course_id) from bus_course_type_id where course_type_id=#{courseTypeId})) 
  </select>
 
  
</mapper>